--- drivers/net/can/usb/peak_usb/pcan_usb_pro.c
+++ drivers/net/can/usb/peak_usb/pcan_usb_pro.c
@@ -333,6 +333,8 @@
 	if (!(dev->state & PCAN_USB_STATE_CONNECTED))
 		return 0;
 
+	memset(req_addr, '\0', req_size);
+
 	req_type = USB_TYPE_VENDOR | USB_RECIP_OTHER;
 
 	switch (req_id) {
@@ -343,7 +345,6 @@
 	default:
 		p = usb_rcvctrlpipe(dev->udev, 0);
 		req_type |= USB_DIR_IN;
-		memset(req_addr, '\0', req_size);
 		break;
 	}
 
@@ -531,7 +532,6 @@
 	struct can_frame *can_frame;
 	struct sk_buff *skb;
 	struct timeval tv;
-	struct skb_shared_hwtstamps *hwts;
 
 	skb = alloc_can_skb(netdev, &can_frame);
 	if (!skb)
@@ -549,8 +549,7 @@
 		memcpy(can_frame->data, rx->data, can_frame->can_dlc);
 
 	peak_usb_get_ts_tv(&usb_if->time_ref, le32_to_cpu(rx->ts32), &tv);
-	hwts = skb_hwtstamps(skb);
-	hwts->hwtstamp = timeval_to_ktime(tv);
+	skb->tstamp = timeval_to_ktime(tv);
 
 	netif_rx(skb);
 	netdev->stats.rx_packets++;
@@ -571,7 +570,6 @@
 	u8 err_mask = 0;
 	struct sk_buff *skb;
 	struct timeval tv;
-	struct skb_shared_hwtstamps *hwts;
 
 	/* nothing should be sent while in BUS_OFF state */
 	if (dev->can.state == CAN_STATE_BUS_OFF)
@@ -666,8 +664,7 @@
 	dev->can.state = new_state;
 
 	peak_usb_get_ts_tv(&usb_if->time_ref, le32_to_cpu(er->ts32), &tv);
-	hwts = skb_hwtstamps(skb);
-	hwts->hwtstamp = timeval_to_ktime(tv);
+	skb->tstamp = timeval_to_ktime(tv);
 	netif_rx(skb);
 	netdev->stats.rx_packets++;
 	netdev->stats.rx_bytes += can_frame->can_dlc;
