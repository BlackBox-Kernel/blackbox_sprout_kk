--- drivers/staging/zram/zram_sysfs.c
+++ drivers/staging/zram/zram_sysfs.c
@@ -95,27 +95,20 @@
 	zram = dev_to_zram(dev);
 	bdev = bdget_disk(zram->disk, 0);
 
-	if (!bdev)
-		return -ENOMEM;
-
 	/* Do not reset an active device! */
-	if (bdev->bd_holders) {
-		ret = -EBUSY;
-		goto out;
-	}
+	if (bdev->bd_holders)
+		return -EBUSY;
 
 	ret = kstrtou16(buf, 10, &do_reset);
 	if (ret)
-		goto out;
+		return ret;
 
-	if (!do_reset) {
-		ret = -EINVAL;
-		goto out;
-	}
+	if (!do_reset)
+		return -EINVAL;
 
 	/* Make sure all pending I/O is finished */
-	fsync_bdev(bdev);
-	bdput(bdev);
+	if (bdev)
+		fsync_bdev(bdev);
 
 	down_write(&zram->init_lock);
 	if (zram->init_done)
@@ -123,10 +116,6 @@
 	up_write(&zram->init_lock);
 
 	return len;
-
-out:
-	bdput(bdev);
-	return ret;
 }
 
 static ssize_t num_reads_show(struct device *dev,
@@ -197,12 +186,10 @@
 	u64 val = 0;
 	struct zram *zram = dev_to_zram(dev);
 
-	down_read(&zram->init_lock);
 	if (zram->init_done) {
 		val = zs_get_total_size_bytes(zram->mem_pool) +
 			((u64)(zram->stats.pages_expand) << PAGE_SHIFT);
 	}
-	up_read(&zram->init_lock);
 
 	return sprintf(buf, "%llu\n", val);
 }
