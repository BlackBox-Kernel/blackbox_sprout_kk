--- drivers/gpu/drm/vmwgfx/vmwgfx_fence.c
+++ drivers/gpu/drm/vmwgfx/vmwgfx_fence.c
@@ -485,7 +485,14 @@
 
 static void vmw_fence_destroy(struct vmw_fence_obj *fence)
 {
+	struct vmw_fence_manager *fman = fence->fman;
+
 	kfree(fence);
+	/*
+	 * Free kernel space accounting.
+	 */
+	ttm_mem_global_free(vmw_mem_glob(fman->dev_priv),
+			    fman->fence_size);
 }
 
 int vmw_fence_create(struct vmw_fence_manager *fman,
@@ -493,12 +500,20 @@
 		     uint32_t mask,
 		     struct vmw_fence_obj **p_fence)
 {
+	struct ttm_mem_global *mem_glob = vmw_mem_glob(fman->dev_priv);
 	struct vmw_fence_obj *fence;
 	int ret;
 
+	ret = ttm_mem_global_alloc(mem_glob, fman->fence_size,
+				   false, false);
+	if (unlikely(ret != 0))
+		return ret;
+
 	fence = kzalloc(sizeof(*fence), GFP_KERNEL);
-	if (unlikely(fence == NULL))
-		return -ENOMEM;
+	if (unlikely(fence == NULL)) {
+		ret = -ENOMEM;
+		goto out_no_object;
+	}
 
 	ret = vmw_fence_obj_init(fman, fence, seqno, mask,
 				 vmw_fence_destroy);
@@ -510,6 +525,8 @@
 
 out_err_init:
 	kfree(fence);
+out_no_object:
+	ttm_mem_global_free(mem_glob, fman->fence_size);
 	return ret;
 }
 
@@ -1001,7 +1018,7 @@
 	}
 
 
-	event = kzalloc(sizeof(*event), GFP_KERNEL);
+	event = kzalloc(sizeof(event->event), GFP_KERNEL);
 	if (unlikely(event == NULL)) {
 		DRM_ERROR("Failed to allocate an event.\n");
 		ret = -ENOMEM;
@@ -1032,8 +1049,6 @@
 	if (ret != 0)
 		goto out_no_queue;
 
-	return 0;
-
 out_no_queue:
 	event->base.destroy(&event->base);
 out_no_event:
@@ -1108,10 +1123,17 @@
 
 	BUG_ON(fence == NULL);
 
-	ret = vmw_event_fence_action_create(file_priv, fence,
-					    arg->flags,
-					    arg->user_data,
-					    true);
+	if (arg->flags & DRM_VMW_FE_FLAG_REQ_TIME)
+		ret = vmw_event_fence_action_create(file_priv, fence,
+						    arg->flags,
+						    arg->user_data,
+						    true);
+	else
+		ret = vmw_event_fence_action_create(file_priv, fence,
+						    arg->flags,
+						    arg->user_data,
+						    true);
+
 	if (unlikely(ret != 0)) {
 		if (ret != -ERESTARTSYS)
 			DRM_ERROR("Failed to attach event to fence.\n");
