--- drivers/md/dm-raid.c
+++ drivers/md/dm-raid.c
@@ -592,7 +592,8 @@
 	__le32 layout;
 	__le32 stripe_sectors;
 
-	/* Remainder of a logical block is zero-filled when writing (see super_sync()). */
+	__u8 pad[452];		/* Round struct to 512 bytes. */
+				/* Always set to 0 when writing. */
 } __packed;
 
 static int read_disk_sb(struct md_rdev *rdev, int size)
@@ -627,7 +628,7 @@
 		if ((r->raid_disk >= 0) && test_bit(Faulty, &r->flags))
 			failed_devices |= (1ULL << r->raid_disk);
 
-	memset(sb + 1, 0, rdev->sb_size - sizeof(*sb));
+	memset(sb, 0, sizeof(*sb));
 
 	sb->magic = cpu_to_le32(DM_RAID_MAGIC);
 	sb->features = cpu_to_le32(0);	/* No features yet */
@@ -662,11 +663,7 @@
 	uint64_t events_sb, events_refsb;
 
 	rdev->sb_start = 0;
-	rdev->sb_size = bdev_logical_block_size(rdev->meta_bdev);
-	if (rdev->sb_size < sizeof(*sb) || rdev->sb_size > PAGE_SIZE) {
-		DMERR("superblock size of a logical block is no longer valid");
-		return -EINVAL;
-	}
+	rdev->sb_size = sizeof(*sb);
 
 	ret = read_disk_sb(rdev, rdev->sb_size);
 	if (ret)
@@ -1070,8 +1067,8 @@
 	return DM_MAPIO_SUBMITTED;
 }
 
-static void raid_status(struct dm_target *ti, status_type_t type,
-			char *result, unsigned maxlen)
+static int raid_status(struct dm_target *ti, status_type_t type,
+		       char *result, unsigned maxlen)
 {
 	struct raid_set *rs = ti->private;
 	unsigned raid_param_cnt = 1; /* at least 1 for chunksize */
@@ -1206,6 +1203,8 @@
 				DMEMIT(" -");
 		}
 	}
+
+	return 0;
 }
 
 static int raid_iterate_devices(struct dm_target *ti, iterate_devices_callout_fn fn, void *data)
